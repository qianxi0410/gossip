{"pageProps":{"posts":[{"id":6,"title":"终端工具集","created_at":"2022-07-24T14:45:54Z","updated_at":"2022-08-26T02:33:33Z","content":"俗话说，工欲善其事，必先利其器。~~差生文具多罢了！~~\r\n\r\n推荐一些能够提升效率的终端工具：\r\n\r\n[yay](https://github.com/Jguer/yay): 又一个 aur helper，为什么不推荐`paru`，因为`yay`看起来更开心一些。\r\n\r\n[zsh](https://github.com/zsh-users/zsh): 比`bash`更强的 shell。\r\n\r\n[oh-my-zsh](https://github.com/ohmyzsh/ohmyzsh): 一个`zsh`的框架，自带许多插件和主题。\r\n\r\n[starship](https://github.com/starship/starship): `zsh`的主题，但是更好看，而且更快。\r\n\r\n[kitty](https://github.com/kovidgoyal/kitty): 一个 GPU 加速的终端，虽然的 python 写的，不用`alacritty`是因为它不支持连写。\r\n\r\n[FiraCode](https://github.com/tonsky/FiraCode): 一个带连写的编程字体。\r\n\r\n[git](https://git-scm.com/): 版本管理。\r\n\r\n[hub](https://github.com/github/hub): 一个更好的`git`增强工具。\r\n\r\n[cli](https://github.com/cli/cli): GitHub 官方的命令行工具，可以省去一些图形化操作。和`hub`有些功能重合。\r\n\r\n[lazygit](https://github.com/jesseduffield/lazygit): 终端的`git`命令 UI。\r\n\r\n[lazydocker](https://github.com/jesseduffield/lazydocker): 终端的`docker`命令 UI。\r\n\r\n[degit](https://github.com/Rich-Harris/degit): 简单的`git`项目脚手架，能够清除仓库的提交历史。\r\n\r\n[difftastic](https://github.com/Wilfred/difftastic): `git diff`命令的增强。\r\n\r\n[ni](https://github.com/antfu/ni): 包管理工具卷上天，`ni`大一统。\r\n\r\n[pnpm](https://github.com/pnpm/pnpm) : 更快、更快、还是他妈的更快。\r\n\r\n[npm-check-updates](https://github.com/raineorshine/npm-check-updates): `package.json`的依赖更新工具。\r\n\r\n[zoxide](https://github.com/ajeetdsouza/zoxide): `autojump`，但是是用`rust`写的。\r\n\r\n[ranger](https://github.com/ranger/ranger): 一个终端的文件管理器。\r\n\r\n[fzf](https://github.com/junegunn/fzf): 模糊查询。\r\n\r\n[fzf-tab](https://github.com/Aloxaf/fzf-tab): 用 fzf 替换 zsh 的默认补全选择菜单。\r\n\r\n[mcfly](https://github.com/cantino/mcfly): 更加友善的`zsh`历史命令搜索提示。\r\n\r\n[neovim](https://github.com/neovim/neovim): `vim` fork 出来的终端编辑器，但是更 **powerful**。\r\n\r\n[gvm](https://github.com/moovweb/gvm): `go` 多版本管理工具。\r\n\r\n[fnm](https://github.com/Schniz/fnm): `node`多版本管理工具。\r\n\r\n[tmux](https://github.com/tmux/tmux): 让你的`session`和终端分离。\r\n\r\n[htop](https://github.com/hishamhm/htop): 更好的`top`命令。\r\n\r\n[exa](https://github.com/ogham/exa): 更好的`ls`命令。\r\n\r\n[duf](https://github.com/muesli/duf): 更好的`df`命令。\r\n\r\n[ncdu](https://github.com/rofl0r/ncdu): 更好的`du`命令。\r\n\r\n[tldr](https://github.com/tldr-pages/tldr): 太长不看。\r\n\r\n[bottom](https://github.com/ClementTsang/bottom): 系统的各种运行时参数查看。\r\n\r\n[neofetch](https://github.com/dylanaraps/neofetch): 系统参数查看。\r\n\r\n[scc](https://github.com/boyter/scc): 项目代码行数查看。\r\n\r\n[httpie](https://github.com/httpie/httpie): 或许是更好的`curl`？\r\n\r\n[ripgrep](https://github.com/BurntSushi/ripgrep): 安息吧，`grep`。更好的正则查询过滤。\r\n\r\n[golines](https://github.com/segmentio/golines): 限制你的`go`代码单行最大长度。\r\n\r\n[gofumpt](https://github.com/mvdan/gofumpt): 更好的`gofmt`，完全和前者兼容。\r\n\r\n[golangci-lint](https://github.com/golangci/golangci-lint): `go`的 lint 工具。\r\n\r\n[eslint](https://eslint.org): 让你的`js`代码更加规范。\r\n\r\n[vite](https://vitejs.dev/): f\\*\\*k `webpack`。\r\n\r\n[tig](https://github.com/jonas/tig): 更好的`git log`查看器。\r\n\r\n[gping](https://github.com/orf/gping): 带有可视化界面的`ping`。\r\n\r\n[bat](https://github.com/sharkdp/bat): 更好的`cat`。\r\n\r\n[act](https://github.com/nektos/act): 在本地运行你的GitHub Action。\r\n\r\n[procs](https://github.com/dalance/procs): 更好的`ps`。\r\n\r\n[sd](https://github.com/chmln/sd): 直观的查找和替换 CLI，更好的`sed`。\r\n","author":"qianxi0410","reactions":{"url":"https://api.github.com/repos/qianxi0410/gossip/issues/6/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"labels":["published","terminal","linux"]}],"tag":"terminal"},"__N_SSG":true}